<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.mapper.student">
 
  <!-- 1. 목록 -->
  <select id="studentList" resultType="dto.StudentDto">
    SELECT stu_no, name, kor, eng, math, ave, mark
      FROM student_t
     ORDER BY stu_no
  </select>
  
  <!-- 2. 전체 학생 수 -->
  <select id="studentCount" resultType="int">
    SELECT COUNT(*)
      FROM student_t
  </select>
  
  <!-- 3. 전체 점수 평균 -->
  <select id="studentAverage" resultType="double">
    SELECT NVL(AVG(ave), 0)
      FROM student_t
  </select>
  
  <!-- 4. 삽입 -->
  <insert id="studentAdd" parameterType="dto.StudentDto">
    INSERT INTO student_t (
        stu_no
      , name
      , kor
      , eng
      , math
      , ave
      , mark
    ) VALUES (
        STUDENT_SEQ.NEXTVAL
      , #{name}
      , #{kor}
      , #{eng}
      , #{math}
      , (#{kor} + #{eng} + #{math}) / 3
      , CASE
          WHEN (#{kor} + #{eng} + #{math}) / 3 >= 90 THEN 'A'
          WHEN (#{kor} + #{eng} + #{math}) / 3 >= 80 THEN 'B'
          WHEN (#{kor} + #{eng} + #{math}) / 3 >= 70 THEN 'C'
          WHEN (#{kor} + #{eng} + #{math}) / 3 >= 60 THEN 'D'
          ELSE 'F'
        END
     )
  </insert>
  
  <!-- 5. 학생 조회 -->
  <select id="queryStudentList" parameterType="Map" resultType="dto.StudentDto">
    SELECT stu_no, name, kor, eng, math, ave, mark
      FROM student_t
     WHERE ave BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 6. 조회된 학생 수 -->
  <select id="queryStudentCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM student_t
     WHERE ave BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 7. 조회된 학생 점수 평균 -->
  <select id="queryStudentAverage" parameterType="Map" resultType="double">
    SELECT NVL(AVG(ave), 0)
      FROM student_t
     WHERE ave BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 8. 삭제 -->
  <delete id="studentDelete" parameterType="int">
    DELETE
      FROM student_t
     WHERE stu_no = #{stuNo}
  </delete>
  
  <!-- 9. 상세 -->
  <select id="studentDetail" parameterType="int" resultType="dto.StudentDto">
    SELECT stu_no, name, kor, eng, math, ave, mark
      FROM student_t
     WHERE stu_no = #{stuNo}
  </select>
  
  <!-- 10. 수정 -->
  <update id="studentModify" parameterType="dto.StudentDto">
    UPDATE student_t
       SET name = #{name}
         , kor = #{kor}
         , eng = #{eng}
         , math = #{math}
         , ave = (#{kor} + #{eng} + #{math}) / 3
         , mark = 
            (CASE
               WHEN (#{kor} + #{eng} + #{math}) / 3 >= 90 THEN 'A'
               WHEN (#{kor} + #{eng} + #{math}) / 3 >= 80 THEN 'B'
               WHEN (#{kor} + #{eng} + #{math}) / 3 >= 70 THEN 'C'
               WHEN (#{kor} + #{eng} + #{math}) / 3 >= 60 THEN 'D'
               ELSE 'F'
             END)
     WHERE stu_no = #{stuNo}
  </update>
  
  <!-- 11. TOP3 -->
  <select id="top3List" resultType="dto.StudentDto">
    <![CDATA[
    SELECT rnk, stu_no, name, kor, eng, math, ave, mark
      FROM (SELECT stu_no, name, kor, eng, math, ave, mark, RANK() OVER(ORDER BY ave DESC) AS rnk
              FROM student_t)
     WHERE rnk <= 3
    ]]>
  </select>
  
</mapper>